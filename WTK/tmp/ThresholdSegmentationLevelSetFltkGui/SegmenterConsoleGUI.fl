# data file for the Fltk User Interface Designer (fluid)
version 1.0104 
header_name {.h} 
code_name {.cxx}
class SegmenterConsoleGUI {open : {public SegmenterConsoleBase}
} {
  Function {SegmenterConsoleGUI()} {open
  } {
    Fl_Window consoleWindow {
      label {Level-Set Segmenter } open
      xywh {184 116 665 400} box DOWN_BOX color 0 labelsize 10 labelcolor 0
      code0 {\#include <SegmenterConsoleBase.h>}
      code1 {\#include <fltkLightButton.h>} visible
    } {
      Fl_Box {} {
        label Menu
        xywh {5 5 360 45} box PLASTIC_UP_BOX color 0 labelfont 1 labelcolor 8 align 21
      }
      Fl_Box {} {
        label {Image to Segment}
        xywh {5 55 140 235} box PLASTIC_DOWN_BOX color 8 labelfont 1 labelcolor 8 align 17
      }
      Fl_Box {} {
        label Parameters
        xywh {370 5 290 285} box PLASTIC_UP_BOX color 8 labelfont 1 labelcolor 8 align 17
      }
      Fl_Box {} {
        label {Threshold Values}
        xywh {375 30 280 65} box PLASTIC_DOWN_BOX color 255 labelfont 1 labelsize 10 labelcolor 28 align 21
      }
      Fl_Box {} {
        label {Level-set Initialization}
        xywh {150 55 215 235} box PLASTIC_DOWN_BOX color 8 labelfont 1 labelcolor 8 align 17
      }
      Fl_Box {} {
        label {Smoothing (optional)}
        xywh {10 125 130 105} box PLASTIC_DOWN_BOX color 255 labelsize 10 labelcolor 8 align 17
      }
      Fl_Light_Button ShowInputButton {
        label {Load Input Image}
        callback {Load();}
        xywh {20 83 105 22} type Normal box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX value 1 selection_color 121 labelsize 10 align 16
        class {fltk::LightButton}
      }
      Fl_Group Case1Group {
        xywh {270 50 340 177} deactivate
      } {
        Fl_Box {} {
          label {Case 2}
          xywh {270 82 91 58} box PLASTIC_DOWN_BOX color 255 labeltype NO_LABEL labelsize 10
        }
        Fl_Light_Button ViewSeedButton {
          label {Load Prior}
          callback {LoadSeedImage();}
          xywh {275 110 80 20} type Normal box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX value 1 selection_color 121 labelsize 10 align 16
          class {fltk::LightButton}
        }
        Fl_Value_Input isosurface {
          label Isovalue
          xywh {320 87 35 18} box PLASTIC_THIN_DOWN_BOX labelsize 10 labelcolor 0 textsize 10
        }
      }
      Fl_Group Case2Group {
        xywh {270 55 340 180} deactivate
      } {
        Fl_Box {} {
          label {Case 1}
          xywh {270 150 90 70} box PLASTIC_DOWN_BOX color 255 labeltype NO_LABEL labelsize 10
        }
        Fl_Value_Input seedX {
          label {Center X}
          xywh {320 157 35 18} box PLASTIC_DOWN_BOX labelsize 10 labelcolor 0 textsize 12
        }
        Fl_Value_Input seedY {
          label {Center Y}
          xywh {320 177 35 18} box PLASTIC_DOWN_BOX labelsize 10 labelcolor 0 textsize 10
        }
        Fl_Value_Input distance {
          label Radius
          xywh {320 197 35 18} box PLASTIC_DOWN_BOX labelsize 10 labelcolor 0 textsize 10
        }
      }
      Fl_Group Case3Group {open
        xywh {270 205 256 95} labeltype NO_LABEL deactivate
      } {
        Fl_Box {} {
          label label
          xywh {270 230 90 55} box PLASTIC_DOWN_BOX color 255 labeltype NO_LABEL labelsize 10
        }
        Fl_Value_Slider paintRadius {
          label {Brush Size}
          callback {ChangePaintRadius(o->value());}
          xywh {275 237 80 18} type Horizontal box PLASTIC_DOWN_BOX color 59 labelsize 10 labelcolor 0 align 16 maximum 10 step 1 value 2
        }
        Fl_Button {} {
          label Clear
          callback {ClearGuess();}
          xywh {275 258 31 22} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX labelsize 10
        }
        Fl_Check_Button eraseGuess {
          label Erase
          xywh {308 258 50 22} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX labelsize 10
        }
      }
      Fl_Group radioGroup {
        xywh {120 50 221 240} labeltype NO_LABEL deactivate
      } {
        Fl_Round_Button radio1 {
          label {Load a prior segmentation}
          callback {SwitchCase(1);}
          xywh {155 95 105 30} type Radio box PLASTIC_UP_BOX down_box PLASTIC_THIN_DOWN_BOX value 1 labelsize 10 labelcolor 0 align 148
        }
        Fl_Round_Button radio2 {
          label {Use a circle}
          callback {SwitchCase(2);}
          xywh {155 170 105 25} type Radio box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX labelsize 10 labelcolor 0 align 148
        }
        Fl_Round_Button radio3 {
          label {Draw an initial segmentation}
          callback {SwitchCase(3);}
          xywh {155 240 105 30} type Radio box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX selection_color 41 labelsize 10 labelcolor 0 align 148
        }
      }
      Fl_Group endControlsGroup {open
        xywh {5 8 931 632} deactivate
      } {
        Fl_Box {} {
          label {Equation Term Weights}
          xywh {375 100 125 100} box PLASTIC_DOWN_BOX color 255 labelfont 1 labelsize 10 labelcolor 8 align 17
        }
        Fl_Box {} {
          label {Laplacian Smoothing}
          xywh {375 205 125 80} box PLASTIC_DOWN_BOX color 255 labelfont 1 labelsize 10 labelcolor 8 align 17
        }
        Fl_Box {} {
          label {Convergence Criteria}
          xywh {505 100 150 60} box PLASTIC_DOWN_BOX color 255 labelfont 1 labelsize 10 labelcolor 8 align 17
        }
        Fl_Box {} {
          label {Maximum Time Step Manipulators (Dangerous!)}
          xywh {505 165 150 70} box PLASTIC_DOWN_BOX color 255 labelfont 1 labelsize 10 labelcolor 1 align 145
        }
        Fl_Value_Input minThresh2 {
          callback {ChangeMinThresh(o->value());}
          xywh {475 48 40 17} box PLASTIC_DOWN_BOX color 60 labeltype NO_LABEL labelsize 10 when 4 textsize 10
        }
        Fl_Value_Input maxThresh2 {
          callback {ChangeMaxThresh(o->value());}
          xywh {475 72 40 18} box PLASTIC_DOWN_BOX color 60 labeltype NO_LABEL labelsize 10 when 4 textsize 10
        }
        Fl_Slider minThresh {
          label {Lower Threshold}
          callback {ChangeMinThresh(o->value());}
          xywh {520 47 130 18} type Horizontal box PLASTIC_DOWN_BOX color 60 labelsize 10 align 20 when 4
        }
        Fl_Slider maxThresh {
          label {Upper Threshold}
          callback {ChangeMaxThresh(o->value());}
          xywh {520 72 130 18} type Horizontal box PLASTIC_DOWN_BOX color 60 labelsize 10 align 20 when 4
        }
        Fl_Value_Input curvature {
          label Curvature
          callback {SetThresholdFilterToModified();}
          xywh {460 117 30 18} box PLASTIC_THIN_DOWN_BOX labelsize 10 when 4 textsize 10
        }
        Fl_Value_Input propagation {
          label Propagation
          callback {SetThresholdFilterToModified();}
          xywh {460 137 30 18} box PLASTIC_THIN_DOWN_BOX labelsize 10 when 4 textsize 10
        }
        Fl_Value_Input edge {
          label {Edge (Laplacian)}
          callback {SetThresholdFilterToModified();}
          xywh {460 157 30 18} box PLASTIC_THIN_DOWN_BOX labelsize 10 when 4 textsize 10
        }
        Fl_Check_Button reverseExpansionDir {
          label {Reverse Expansion}
          callback {SetThresholdFilterToModified();}
          xywh {470 177 20 18} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX labelsize 10 align 4 when 1
        }
        Fl_Value_Input maxIterations {
          label {Maximum Iterations}
          callback {SetThresholdFilterToModified();}
          xywh {605 117 45 18} box PLASTIC_THIN_DOWN_BOX labelsize 10 when 4 textsize 10
        }
        Fl_Value_Input RMSError {
          label {Min. RMS Change}
          callback {SetThresholdFilterToModified();}
          xywh {605 137 45 18} box PLASTIC_THIN_DOWN_BOX labelsize 10 when 4 textsize 10
        }
        Fl_Value_Input threshIterations {
          label Iterations
          callback {SetThresholdFilterToModified();}
          xywh {455 222 35 18} box PLASTIC_THIN_DOWN_BOX labelsize 10 when 4 textsize 10
        }
        Fl_Value_Input threshConductance {
          label Conductance
          callback {SetThresholdFilterToModified();}
          xywh {455 242 35 18} box PLASTIC_DOWN_BOX labelsize 10 when 4 textsize 10
        }
        Fl_Value_Input threshTimeStep {
          label {Time Step}
          callback {SetThresholdFilterToModified();}
          xywh {455 262 35 18} box PLASTIC_THIN_DOWN_BOX labelsize 10 when 4 textsize 10
        }
        Fl_Box {} {
          label {Segmentation Control}
          xywh {5 295 655 80} box PLASTIC_DOWN_BOX color 8 labelfont 1 labelcolor 0 align 145
        }
        Fl_Light_Button SegmentButton {
          label Start
          callback {ShowSegmentedImage();}
          xywh {270 315 75 55} type Normal box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX color 63 selection_color 121
          class {fltk::LightButton}
        }
        Fl_Button stopSeg {
          label Stop
          callback {m_thresholdSegmentation->AbortGenerateDataOn();}
          xywh {350 315 60 55} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX color 1
        }
        Fl_Value_Slider updateIterations {
          label {Display Update Interval}
          xywh {420 347 120 18} type Horizontal box PLASTIC_UP_BOX color 93 labelsize 10 align 8 minimum 1 maximum 500 step 1 value 1
        }
        Fl_Value_Input maxCurvatureTimeStep {
          label {Curvature-Based}
          callback {SetThresholdFilterToModified();}
          xywh {610 192 35 18} box PLASTIC_THIN_DOWN_BOX color 89 labelsize 10 labelcolor 1 when 4 textsize 10
        }
        Fl_Value_Input maxPropagationTimeStep {
          label {Propagation-Based}
          callback {SetThresholdFilterToModified();}
          xywh {610 212 35 18} box PLASTIC_THIN_DOWN_BOX color 89 labelsize 10 labelcolor 1 when 4 textsize 10
        }
        Fl_Button save {
          label {Save as Float}
          callback {SaveSegmented();}
          xywh {230 10 75 15} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX labelsize 10
        }
        Fl_Button binarySave {
          label {Save as Char}
          callback {SaveBinaryMask();}
          xywh {230 30 75 15} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX labelsize 10 deactivate
        }
        Fl_Value_Input elapsedIterations {
          label {Elapsed Iterations}
          xywh {185 322 75 18} box PLASTIC_UP_BOX color 93 labelsize 10 when 4 textsize 10 deactivate
        }
        Fl_Value_Input lastRMSChange {
          label {RMS Change}
          xywh {185 347 75 18} box PLASTIC_THIN_UP_BOX color 93 labelsize 10 when 4 textsize 10 deactivate
        }
      }
      Fl_Group diffusionGroup {open selected
        xywh {5 47 915 383} labelfont 1 labelsize 10 align 21 deactivate
      } {
        Fl_Value_Input diffusionIterations {
          label Iterations
          xywh {85 145 35 15} box PLASTIC_THIN_DOWN_BOX labelsize 10 labelcolor 0 textsize 10
        }
        Fl_Value_Input diffusionConductance {
          label Conductance
          xywh {85 165 35 15} box PLASTIC_THIN_DOWN_BOX labelsize 10 labelcolor 0 textsize 10
        }
        Fl_Value_Input diffusionTimeStep {
          label {Time Step}
          xywh {85 185 35 15} box PLASTIC_THIN_DOWN_BOX labelsize 10 labelcolor 0 textsize 10
        }
        Fl_Light_Button DiffuseButton {
          label {Diffuse Image}
          callback {SmoothImage();}
          xywh {30 205 90 20} type Normal box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX value 1 selection_color 121 labelsize 10 align 16
          class {fltk::LightButton}
        }
        Fl_Check_Button calcThresh {
          label {Draw Region}
          callback {ToggleThresholdGuess();}
          xywh {380 47 90 18} box PLASTIC_DOWN_BOX down_box DOWN_BOX value 1 selection_color 90 labelsize 10 align 148
        }
        Fl_Button {} {
          label Calculate
          callback {CalculateThresholds();}
          xywh {420 70 50 20} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX labelsize 10 align 128
        }
        Fl_Button {} {
          label Clear
          callback {ClearThresh();}
          xywh {380 70 35 20} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX labelsize 10
        }
      }
      Fl_Button {} {
        label Quit
        callback {Quit();}
        xywh {310 10 50 35} box PLASTIC_UP_BOX labelsize 12
      }
      Fl_Button helpButton {
        label {Help!}
        callback {helpWin->show();}
        xywh {65 10 60 35} box PLASTIC_UP_BOX labelsize 12
      }
      Fl_Button saveSessionButton {
        label {Save Session}
        callback {SaveSession();}
        xywh {130 30 95 15} box PLASTIC_UP_BOX labelsize 10
      }
      Fl_Button loadSessionButton {
        label {Load Session}
        callback {LoadSession();}
        xywh {130 10 95 15} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX labelsize 10
      }
      Fl_Progress progressBar {
        label Progress
        xywh {5 380 655 15} box PLASTIC_DOWN_BOX color 255 selection_color 1 labelsize 10 labelcolor 8
      }
      Fl_Box {} {
        label label
        xywh {70 105 5 20} box FLAT_BOX color 120 labeltype NO_LABEL
      }
      Fl_Box lineSelectPriorA {
        label label
        xywh {260 105 10 5} box FLAT_BOX color 120 labeltype NO_LABEL
      }
      Fl_Box lineSelectCircleA {
        label label
        xywh {260 180 10 5} box FLAT_BOX color 120 labeltype NO_LABEL
      }
      Fl_Box lineSelectDrawA {
        label label
        xywh {260 250 10 5} box FLAT_BOX color 120 labeltype NO_LABEL
      }
    }
    Fl_Window helpWin {
      label Help
      xywh {473 673 340 305} box PLASTIC_UP_BOX color 58 hide resizable
    } {
      Fl_Output helpText {
        xywh {6 5 330 265} type Multiline box PLASTIC_DOWN_BOX color 17 labeltype NO_LABEL labelsize 10 textsize 10 resizable
      }
      Fl_Button {} {
        label Close
        callback {helpWin->hide();}
        xywh {144 275 55 25} box PLASTIC_UP_BOX down_box PLASTIC_THIN_DOWN_BOX color 17 labelsize 10
      }
    }
  }
  Function {~SegmenterConsoleGUI()} {return_type virtual
  } {
    code {} {}
  }
  Function {Quit( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {Load( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowInputImage( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowGradientImage( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowSegmentedImage( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {SwitchCase( int )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {LoadSeedImage( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowSeedImage( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {SmoothImage( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowSpeedImage( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ChangePaintRadius( float )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ClearGuess( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ClearThresh( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ToggleThresholdGuess( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {CalculateThresholds( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {SaveSegmented( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {SaveBinaryMask( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ChangeMinThresh( float )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ChangeMaxThresh( float )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {SetThresholdFilterToModified( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {SaveSession( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {LoadSession( void )} {return_type {virtual void}
  } {
    code {} {}
  }
} 
