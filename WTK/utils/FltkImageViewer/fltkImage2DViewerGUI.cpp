// generated by Fast Light User Interface Designer (fluid) version 1.0303

#include "fltkImage2DViewerGUI.h"

void fltkImage2DViewerGUI::cb_minimumSlider_i(Fl_Value_Slider*, void*) {
  this->RenderImage( minimumSlider->value(), maximumSlider->value() );
}
void fltkImage2DViewerGUI::cb_minimumSlider(Fl_Value_Slider* o, void* v) {
  ((fltkImage2DViewerGUI*)(o->parent()->user_data()))->cb_minimumSlider_i(o,v);
}

void fltkImage2DViewerGUI::cb_maximumSlider_i(Fl_Value_Slider*, void*) {
  this->RenderImage( minimumSlider->value(), maximumSlider->value() );
}
void fltkImage2DViewerGUI::cb_maximumSlider(Fl_Value_Slider* o, void* v) {
  ((fltkImage2DViewerGUI*)(o->parent()->user_data()))->cb_maximumSlider_i(o,v);
}

fltkImage2DViewerGUI::fltkImage2DViewerGUI() {
  { externalWindow = new Fl_Double_Window(450, 365);
    externalWindow->user_data((void*)(this));
    { imageViewer = new fltk::Image2DViewerWindow(0, 0, 450, 365);
      imageViewer->box(FL_NO_BOX);
      imageViewer->color(FL_BACKGROUND_COLOR);
      imageViewer->selection_color(FL_BACKGROUND_COLOR);
      imageViewer->labeltype(FL_NORMAL_LABEL);
      imageViewer->labelfont(0);
      imageViewer->labelsize(14);
      imageViewer->labelcolor(FL_FOREGROUND_COLOR);
      imageViewer->align(Fl_Align(FL_ALIGN_CENTER));
      imageViewer->when(FL_WHEN_RELEASE);
    } // fltk::Image2DViewerWindow* imageViewer
    externalWindow->end();
    externalWindow->resizable(externalWindow);
  } // Fl_Double_Window* externalWindow
  { intensityWindow = new Fl_Double_Window(501, 52, "Intensity Windowing");
    intensityWindow->user_data((void*)(this));
    { minimumSlider = new Fl_Value_Slider(33, 7, 460, 16, "Min ");
      minimumSlider->type(1);
      minimumSlider->labelsize(12);
      minimumSlider->callback((Fl_Callback*)cb_minimumSlider);
      minimumSlider->align(Fl_Align(FL_ALIGN_LEFT));
    } // Fl_Value_Slider* minimumSlider
    { maximumSlider = new Fl_Value_Slider(33, 24, 460, 17, "Max ");
      maximumSlider->type(1);
      maximumSlider->labelsize(12);
      maximumSlider->callback((Fl_Callback*)cb_maximumSlider);
      maximumSlider->align(Fl_Align(FL_ALIGN_LEFT));
    } // Fl_Value_Slider* maximumSlider
    intensityWindow->end();
  } // Fl_Double_Window* intensityWindow
}

void fltkImage2DViewerGUI::SetLabel(const char *label) {
  externalWindow->label( label );
}

void fltkImage2DViewerGUI::Show(void) {
  externalWindow->show();
  imageViewer->show();
}

void fltkImage2DViewerGUI::Hide(void) {
  externalWindow->hide();
  intensityWindow->hide();
}

void fltkImage2DViewerGUI::Redraw(void) {
  imageViewer->redraw();
  Fl::check();
}

void fltkImage2DViewerGUI::Update(void) {
}

void fltkImage2DViewerGUI::RenderImage( double min, double max ) {
}
